{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/pages/ExploreMain.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchRecipes } from '../actions/recipes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Explore.css';\n\nfunction ExploreMain({\n  location: {\n    pathname\n  }\n}) {\n  const type = pathname.split('/')[2];\n  const {\n    mealsToken,\n    cocktailsToken\n  } = useSelector(state => state.login);\n  const {\n    list\n  } = useSelector(state => state.recipes);\n  const dispatch = useDispatch();\n  const [id, setId] = useState('');\n  const prevList = useRef(list);\n\n  const handleClick = () => {\n    const token = type === 'comidas' ? mealsToken : cocktailsToken;\n    dispatch(fetchRecipes(token, type, {\n      request: 'random',\n      key: ''\n    }));\n  };\n\n  useEffect(() => {\n    if (list !== prevList.current) {\n      setId(list[0].id);\n    }\n\n    return () => setId('');\n  }, [list]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"explore-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    \"data-testid\": \"explore-by-ingredient\",\n    to: `${pathname}/ingredientes`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    className: \"custom-btn-explore\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Por Ingredientes\")), type === 'comidas' && /*#__PURE__*/React.createElement(Link, {\n    \"data-testid\": \"explore-by-area\",\n    to: `${pathname}/area`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    className: \"custom-btn-explore\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Por Local de Origem\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"surprise-me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    className: \"custom-btn-explore\",\n    \"data-testid\": \"explore-surprise\",\n    onClick: handleClick,\n    type: \"button\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Me Surpreenda!\")), id && /*#__PURE__*/React.createElement(Redirect, {\n    to: `../${type}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}\n\nExploreMain.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default ExploreMain;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/pages/ExploreMain.js"],"names":["React","useEffect","useRef","useState","PropTypes","Link","Redirect","useDispatch","useSelector","Button","Footer","Header","fetchRecipes","ExploreMain","location","pathname","type","split","mealsToken","cocktailsToken","state","login","list","recipes","dispatch","id","setId","prevList","handleClick","token","request","key","current","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchRecipes } from '../actions/recipes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Explore.css';\n\nfunction ExploreMain({ location: { pathname } }) {\n  const type = pathname.split('/')[2];\n  const { mealsToken, cocktailsToken } = useSelector((state) => state.login);\n  const { list } = useSelector((state) => state.recipes);\n  const dispatch = useDispatch();\n  const [id, setId] = useState('');\n  const prevList = useRef(list);\n\n  const handleClick = () => {\n    const token = type === 'comidas' ? mealsToken : cocktailsToken;\n    dispatch(fetchRecipes(token, type, { request: 'random', key: '' }));\n  };\n\n  useEffect(() => {\n    if (list !== prevList.current) {\n      setId(list[0].id);\n    }\n    return () => setId('');\n  }, [list]);\n\n  return (\n    <>\n      <Header />\n      <section className=\"explore-button\">\n        <Link\n          data-testid=\"explore-by-ingredient\"\n          to={ `${pathname}/ingredientes` }\n        >\n          <Button\n            block\n            className=\"custom-btn-explore\"\n            variant=\"primary\"\n          >\n            Por Ingredientes\n          </Button>\n        </Link>\n        { (type === 'comidas') && (\n          <Link\n            data-testid=\"explore-by-area\"\n            to={ `${pathname}/area` }\n          >\n            <Button\n              block\n              className=\"custom-btn-explore\"\n              variant=\"primary\"\n            >\n              Por Local de Origem\n            </Button>\n          </Link>) }\n        <div className=\"surprise-me\">\n          <Button\n            block\n            className=\"custom-btn-explore\"\n            data-testid=\"explore-surprise\"\n            onClick={ handleClick }\n            type=\"button\"\n            variant=\"primary\"\n          >\n            Me Surpreenda!\n          </Button>\n        </div>\n        { id && <Redirect to={ `../${type}/${id}` } /> }\n      </section>\n      <Footer />\n    </>\n  );\n}\nExploreMain.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ExploreMain;\n"]},"metadata":{},"sourceType":"module"}