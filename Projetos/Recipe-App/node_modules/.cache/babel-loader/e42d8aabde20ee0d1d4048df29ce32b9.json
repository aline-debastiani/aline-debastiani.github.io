{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/pages/Main.jsx\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport RecipeCard from '../components/RecipeCard';\nimport Loading from '../components/Loading';\nimport CategoryButton from '../components/CategoryButton';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { byAddIngredient, fetchCategories, fetchRecipes } from '../actions/recipes';\n\nfunction Main({\n  location: {\n    pathname\n  }\n}) {\n  const {\n    list,\n    isFetching,\n    categories,\n    byIngredient\n  } = useSelector(state => state.recipes);\n  const dispatch = useDispatch(); // const selectType = { '/comidas': 'meals', '/bebidas': 'drinks' };\n\n  const type = pathname.slice(1);\n  const token = 1;\n  useEffect(() => {\n    dispatch(fetchCategories(token, type));\n\n    if (byIngredient) {\n      dispatch(fetchRecipes(token, type, {\n        request: 'filter',\n        key: 'i',\n        parameter: byIngredient\n      }));\n      dispatch(byAddIngredient(''));\n    } else {\n      dispatch(fetchRecipes(token, type));\n    }\n  }, [pathname]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), categories.map(category => /*#__PURE__*/React.createElement(CategoryButton, {\n    name: category,\n    key: `btn-${category}`,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(CategoryButton, {\n    name: \"All\",\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), isFetching ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }\n  }) : list.map((recipe, index) => /*#__PURE__*/React.createElement(RecipeCard, {\n    type: type,\n    index: index,\n    recipe: recipe,\n    key: `recipe-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\n\nMain.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default Main;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/pages/Main.jsx"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","RecipeCard","Loading","CategoryButton","Header","Footer","byAddIngredient","fetchCategories","fetchRecipes","Main","location","pathname","list","isFetching","categories","byIngredient","state","recipes","dispatch","type","slice","token","request","key","parameter","map","category","recipe","index","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,YAA3C,QAA+D,oBAA/D;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA;AAAF;AAAZ,CAAd,EAA0C;AACxC,QAAM;AACJC,IAAAA,IADI;AACEC,IAAAA,UADF;AACcC,IAAAA,UADd;AAC0BC,IAAAA;AAD1B,MAEFf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAFf;AAGA,QAAMC,QAAQ,GAAGnB,WAAW,EAA5B,CAJwC,CAKxC;;AACA,QAAMoB,IAAI,GAAGR,QAAQ,CAACS,KAAT,CAAe,CAAf,CAAb;AACA,QAAMC,KAAK,GAAG,CAAd;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,QAAQ,CAACX,eAAe,CAACc,KAAD,EAAQF,IAAR,CAAhB,CAAR;;AACA,QAAIJ,YAAJ,EAAkB;AAChBG,MAAAA,QAAQ,CAACV,YAAY,CAACa,KAAD,EAAQF,IAAR,EACnB;AAAEG,QAAAA,OAAO,EAAE,QAAX;AAAqBC,QAAAA,GAAG,EAAE,GAA1B;AAA+BC,QAAAA,SAAS,EAAET;AAA1C,OADmB,CAAb,CAAR;AAEAG,MAAAA,QAAQ,CAACZ,eAAe,CAAC,EAAD,CAAhB,CAAR;AACD,KAJD,MAIO;AACLY,MAAAA,QAAQ,CAACV,YAAY,CAACa,KAAD,EAAQF,IAAR,CAAb,CAAR;AACD;AACF,GATQ,EASN,CAACR,QAAD,CATM,CAAT;AAWA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEIG,UAAU,CACTW,GADD,CACMC,QAAD,iBACH,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAGA,QAAvB;AAAkC,IAAA,GAAG,EAAI,OAAMA,QAAS,EAAxD;AAA4D,IAAA,IAAI,EAAGP,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,eAKE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,KAArB;AAA2B,IAAA,IAAI,EAAGA,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAMIN,UAAU,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiBD,IAAI,CAACa,GAAL,CAAS,CAACE,MAAD,EAASC,KAAT,kBACpC,oBAAC,UAAD;AACE,IAAA,IAAI,EAAGT,IADT;AAEE,IAAA,KAAK,EAAGS,KAFV;AAGE,IAAA,MAAM,EAAGD,MAHX;AAIE,IAAA,GAAG,EAAI,UAASC,KAAM,EAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD2B,CAN/B,eAaE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD;;AAEDnB,IAAI,CAACoB,SAAL,GAAiB;AACfnB,EAAAA,QAAQ,EAAEZ,SAAS,CAACgC,KAAV,CAAgB;AACxBnB,IAAAA,QAAQ,EAAEb,SAAS,CAACiC,MAAV,CAAiBC;AADH,GAAhB,EAEPA;AAHY,CAAjB;AAMA,eAAevB,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport RecipeCard from '../components/RecipeCard';\nimport Loading from '../components/Loading';\nimport CategoryButton from '../components/CategoryButton';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { byAddIngredient, fetchCategories, fetchRecipes } from '../actions/recipes';\n\nfunction Main({ location: { pathname } }) {\n  const {\n    list, isFetching, categories, byIngredient,\n  } = useSelector((state) => state.recipes);\n  const dispatch = useDispatch();\n  // const selectType = { '/comidas': 'meals', '/bebidas': 'drinks' };\n  const type = pathname.slice(1);\n  const token = 1;\n\n  useEffect(() => {\n    dispatch(fetchCategories(token, type));\n    if (byIngredient) {\n      dispatch(fetchRecipes(token, type,\n        { request: 'filter', key: 'i', parameter: byIngredient }));\n      dispatch(byAddIngredient(''));\n    } else {\n      dispatch(fetchRecipes(token, type));\n    }\n  }, [pathname]);\n\n  return (\n    <>\n      <Header />\n      { categories\n        .map((category) => (\n          <CategoryButton name={ category } key={ `btn-${category}` } type={ type } />))}\n      <CategoryButton name=\"All\" type={ type } />\n      { isFetching ? <Loading /> : list.map((recipe, index) => (\n        <RecipeCard\n          type={ type }\n          index={ index }\n          recipe={ recipe }\n          key={ `recipe-${index}` }\n        />))}\n      <Footer />\n    </>\n  );\n}\n\nMain.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}