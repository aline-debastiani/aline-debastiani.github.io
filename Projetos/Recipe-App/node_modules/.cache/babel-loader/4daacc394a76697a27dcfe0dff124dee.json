{"ast":null,"code":"import { ADD_CATEGORIES, ADD_FILTER, ADD_RECIPES, REQUEST_RECIPES } from '../actions';\nconst INITIAL_STATE = {\n  list: [],\n  isFetching: true,\n  categories: [],\n  filter: ''\n};\nconst MAX_RECIPES = 12;\n\nconst recipes = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_RECIPES:\n      return { ...state,\n        isFetching: true\n      };\n\n    case ADD_RECIPES:\n      return { ...state,\n        isFetching: false,\n        list: action.payload.slice(0, MAX_RECIPES)\n      };\n\n    case ADD_CATEGORIES:\n      return { ...state,\n        categories: action.payload\n      };\n\n    case ADD_FILTER:\n      return { ...state,\n        filter: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default recipes;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/reducers/recipes.js"],"names":["ADD_CATEGORIES","ADD_FILTER","ADD_RECIPES","REQUEST_RECIPES","INITIAL_STATE","list","isFetching","categories","filter","MAX_RECIPES","recipes","state","action","type","payload","slice"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,UAAzB,EAAqCC,WAArC,EAAkDC,eAAlD,QAAyE,YAAzE;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,UAAU,EAAE,IAFQ;AAGpBC,EAAAA,UAAU,EAAE,EAHQ;AAIpBC,EAAAA,MAAM,EAAE;AAJY,CAAtB;AAOA,MAAMC,WAAW,GAAG,EAApB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKV,eAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYL,QAAAA,UAAU,EAAE;AAAxB,OAAP;;AACF,SAAKJ,WAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYL,QAAAA,UAAU,EAAE,KAAxB;AAA+BD,QAAAA,IAAI,EAAEO,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAqB,CAArB,EAAwBN,WAAxB;AAArC,OAAP;;AACF,SAAKT,cAAL;AACE,aAAO,EAAE,GAAGW,KAAL;AAAYJ,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAA/B,OAAP;;AACF,SAAKb,UAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAYH,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAA3B,OAAP;;AACF;AACE,aAAOH,KAAP;AAVF;AAYD,CAbD;;AAeA,eAAeD,OAAf","sourcesContent":["import { ADD_CATEGORIES, ADD_FILTER, ADD_RECIPES, REQUEST_RECIPES } from '../actions';\n\nconst INITIAL_STATE = {\n  list: [],\n  isFetching: true,\n  categories: [],\n  filter: '',\n};\n\nconst MAX_RECIPES = 12;\n\nconst recipes = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_RECIPES:\n    return { ...state, isFetching: true };\n  case ADD_RECIPES:\n    return { ...state, isFetching: false, list: action.payload.slice(0, MAX_RECIPES) };\n  case ADD_CATEGORIES:\n    return { ...state, categories: action.payload };\n  case ADD_FILTER:\n    return { ...state, filter: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default recipes;\n"]},"metadata":{},"sourceType":"module"}