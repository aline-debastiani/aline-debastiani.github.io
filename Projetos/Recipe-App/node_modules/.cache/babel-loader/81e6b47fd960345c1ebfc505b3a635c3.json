{"ast":null,"code":"import { ADD_CATEGORIES, ADD_FAVORITE, ADD_FILTER, ADD_RECIPES, ADD_RECOMMENDATIONS, END_RECIPE, REQUEST_RECIPES, RM_FAVORITE, START_RECIPE, ADD_BYINGREDIENT, ADD_COUNTRIES } from '../actions';\nconst inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes') || '{}');\nconst favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes') || '[]');\nconst doneRecipes = JSON.parse(localStorage.getItem('doneRecipes') || '[]');\nconst INITIAL_STATE = {\n  list: [],\n  isFetching: true,\n  categories: [],\n  filter: '',\n  recommendations: [],\n  start: {\n    comidas: inProgressRecipes.meals || {},\n    bebidas: inProgressRecipes.cocktails || {}\n  },\n  done: doneRecipes,\n  favorite: favoriteRecipes,\n  byIngredient: '',\n  areas: {\n    meals: []\n  }\n};\nconst MAX_RECIPES = 12;\nconst MAX_RECOMMENDATIONS = 6;\n\nconst recipes = (state = INITIAL_STATE, action) => {\n  const doneDate = new Date();\n\n  switch (action.type) {\n    case REQUEST_RECIPES:\n      return { ...state,\n        isFetching: true\n      };\n\n    case ADD_RECIPES:\n      return { ...state,\n        isFetching: false,\n        list: action.payload.slice(0, MAX_RECIPES)\n      };\n\n    case ADD_CATEGORIES:\n      return { ...state,\n        categories: action.payload\n      };\n\n    case ADD_FILTER:\n      return { ...state,\n        filter: action.payload\n      };\n\n    case ADD_RECOMMENDATIONS:\n      return { ...state,\n        recommendations: action.payload.slice(0, MAX_RECOMMENDATIONS)\n      };\n\n    case START_RECIPE:\n      return { ...state,\n        start: { ...state.start,\n          [action.selectedType]: { ...state.start[action.selectedType],\n            ...action.payload\n          }\n        }\n      };\n\n    case END_RECIPE:\n      return { ...state,\n        done: [...state.done, { ...action.payload,\n          doneDate: doneDate.toLocaleDateString('pt-Br')\n        }]\n      };\n\n    case ADD_FAVORITE:\n      return { ...state,\n        favorite: [...state.favorite, action.payload]\n      };\n\n    case RM_FAVORITE:\n      return { ...state,\n        favorite: [...state.favorite.filter(({\n          id,\n          type\n        }) => id !== action.payload.id || type !== action.payload.type)]\n      };\n\n    case ADD_BYINGREDIENT:\n      return { ...state,\n        byIngredient: action.payload\n      };\n\n    case ADD_COUNTRIES:\n      return { ...state,\n        areas: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default recipes;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/reducers/recipes.js"],"names":["ADD_CATEGORIES","ADD_FAVORITE","ADD_FILTER","ADD_RECIPES","ADD_RECOMMENDATIONS","END_RECIPE","REQUEST_RECIPES","RM_FAVORITE","START_RECIPE","ADD_BYINGREDIENT","ADD_COUNTRIES","inProgressRecipes","JSON","parse","localStorage","getItem","favoriteRecipes","doneRecipes","INITIAL_STATE","list","isFetching","categories","filter","recommendations","start","comidas","meals","bebidas","cocktails","done","favorite","byIngredient","areas","MAX_RECIPES","MAX_RECOMMENDATIONS","recipes","state","action","doneDate","Date","type","payload","slice","selectedType","toLocaleDateString","id"],"mappings":"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","sourcesContent":["import { ADD_CATEGORIES, ADD_FAVORITE, ADD_FILTER, ADD_RECIPES,\n  ADD_RECOMMENDATIONS, END_RECIPE, REQUEST_RECIPES, RM_FAVORITE,\n  START_RECIPE, ADD_BYINGREDIENT, ADD_COUNTRIES } from '../actions';\n\nconst inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes') || '{}');\nconst favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes') || '[]');\nconst doneRecipes = JSON.parse(localStorage.getItem('doneRecipes') || '[]');\n\nconst INITIAL_STATE = {\n  list: [],\n  isFetching: true,\n  categories: [],\n  filter: '',\n  recommendations: [],\n  start: { comidas: inProgressRecipes.meals || {},\n    bebidas: inProgressRecipes.cocktails || {} },\n  done: doneRecipes,\n  favorite: favoriteRecipes,\n  byIngredient: '',\n  areas: { meals: [] },\n};\n\nconst MAX_RECIPES = 12;\nconst MAX_RECOMMENDATIONS = 6;\n\nconst recipes = (state = INITIAL_STATE, action) => {\n  const doneDate = new Date();\n  switch (action.type) {\n  case REQUEST_RECIPES:\n    return { ...state, isFetching: true };\n  case ADD_RECIPES:\n    return { ...state, isFetching: false, list: action.payload.slice(0, MAX_RECIPES) };\n  case ADD_CATEGORIES:\n    return { ...state, categories: action.payload };\n  case ADD_FILTER:\n    return { ...state, filter: action.payload };\n  case ADD_RECOMMENDATIONS:\n    return { ...state, recommendations: action.payload.slice(0, MAX_RECOMMENDATIONS) };\n  case START_RECIPE:\n    return { ...state,\n      start: { ...state.start,\n        [action.selectedType]:\n          { ...state.start[action.selectedType], ...action.payload } } };\n  case END_RECIPE:\n    return { ...state,\n      done: [...state.done,\n        { ...action.payload, doneDate: doneDate.toLocaleDateString('pt-Br') }] };\n  case ADD_FAVORITE:\n    return { ...state, favorite: [...state.favorite, action.payload] };\n  case RM_FAVORITE:\n    return { ...state,\n      favorite: [...state.favorite\n        .filter(({ id, type }) => id !== action.payload.id\n          || type !== action.payload.type)] };\n  case ADD_BYINGREDIENT:\n    return { ...state, byIngredient: action.payload };\n  case ADD_COUNTRIES:\n    return { ...state, areas: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default recipes;\n"]},"metadata":{},"sourceType":"module"}