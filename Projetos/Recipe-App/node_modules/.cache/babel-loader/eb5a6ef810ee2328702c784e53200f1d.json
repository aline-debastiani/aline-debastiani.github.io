{"ast":null,"code":"import { ADD_CATEGORIES, ADD_FAVORITE, ADD_FILTER, ADD_RECIPES, ADD_RECOMMENDATIONS, END_RECIPE, REQUEST_RECIPES, RM_FAVORITE, START_RECIPE } from '../actions';\nconst inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes')) || {};\nconst favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\nconst doneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\nconst INITIAL_STATE = {\n  list: [],\n  isFetching: true,\n  categories: [],\n  filter: '',\n  recommendations: [],\n  start: {\n    Meal: inProgressRecipes.meals || {},\n    Drink: inProgressRecipes.cocktails || {}\n  },\n  done: doneRecipes,\n  favorite: favoriteRecipes\n};\nconst MAX_RECIPES = 12;\nconst MAX_RECOMMENDATIONS = 6;\n\nconst recipes = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_RECIPES:\n      return { ...state,\n        isFetching: true\n      };\n\n    case ADD_RECIPES:\n      return { ...state,\n        isFetching: false,\n        list: action.payload.slice(0, MAX_RECIPES)\n      };\n\n    case ADD_CATEGORIES:\n      return { ...state,\n        categories: action.payload\n      };\n\n    case ADD_FILTER:\n      return { ...state,\n        filter: action.payload\n      };\n\n    case ADD_RECOMMENDATIONS:\n      return { ...state,\n        recommendations: action.payload.slice(0, MAX_RECOMMENDATIONS)\n      };\n\n    case START_RECIPE:\n      return { ...state,\n        start: { ...state.start,\n          [action.selectedType]: { ...state.start[action.selectedType],\n            ...action.payload\n          }\n        }\n      };\n\n    case END_RECIPE:\n      return { ...state,\n        done: [...state.done, action.payload]\n      };\n\n    case ADD_FAVORITE:\n      return { ...state,\n        favorite: [...state.favorite, action.payload]\n      };\n\n    case RM_FAVORITE:\n      return { ...state,\n        favorite: [...state.favorite.filter(({\n          id,\n          type\n        }) => id !== action.payload.id || type !== action.payload.type)]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default recipes;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/reducers/recipes.js"],"names":["ADD_CATEGORIES","ADD_FAVORITE","ADD_FILTER","ADD_RECIPES","ADD_RECOMMENDATIONS","END_RECIPE","REQUEST_RECIPES","RM_FAVORITE","START_RECIPE","inProgressRecipes","JSON","parse","localStorage","getItem","favoriteRecipes","doneRecipes","INITIAL_STATE","list","isFetching","categories","filter","recommendations","start","Meal","meals","Drink","cocktails","done","favorite","MAX_RECIPES","MAX_RECOMMENDATIONS","recipes","state","action","type","payload","slice","selectedType","id"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,YAAzB,EAAuCC,UAAvC,EAAmDC,WAAnD,EACEC,mBADF,EACuBC,UADvB,EAEEC,eAFF,EAEmBC,WAFnB,EAEgCC,YAFhC,QAEoD,YAFpD;AAIA,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,KAAyD,EAAnF;AACA,MAAMC,eAAe,GAAGJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,KAAuD,EAA/E;AACA,MAAME,WAAW,GAAGL,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,KAAmD,EAAvE;AAEA,MAAMG,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,UAAU,EAAE,IAFQ;AAGpBC,EAAAA,UAAU,EAAE,EAHQ;AAIpBC,EAAAA,MAAM,EAAE,EAJY;AAKpBC,EAAAA,eAAe,EAAE,EALG;AAMpBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAEd,iBAAiB,CAACe,KAAlB,IAA2B,EAAnC;AACLC,IAAAA,KAAK,EAAEhB,iBAAiB,CAACiB,SAAlB,IAA+B;AADjC,GANa;AAQpBC,EAAAA,IAAI,EAAEZ,WARc;AASpBa,EAAAA,QAAQ,EAAEd;AATU,CAAtB;AAYA,MAAMe,WAAW,GAAG,EAApB;AACA,MAAMC,mBAAmB,GAAG,CAA5B;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGhB,aAAT,EAAwBiB,MAAxB,KAAmC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK5B,eAAL;AACE,aAAO,EAAE,GAAG0B,KAAL;AAAYd,QAAAA,UAAU,EAAE;AAAxB,OAAP;;AACF,SAAKf,WAAL;AACE,aAAO,EAAE,GAAG6B,KAAL;AAAYd,QAAAA,UAAU,EAAE,KAAxB;AAA+BD,QAAAA,IAAI,EAAEgB,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAqB,CAArB,EAAwBP,WAAxB;AAArC,OAAP;;AACF,SAAK7B,cAAL;AACE,aAAO,EAAE,GAAGgC,KAAL;AAAYb,QAAAA,UAAU,EAAEc,MAAM,CAACE;AAA/B,OAAP;;AACF,SAAKjC,UAAL;AACE,aAAO,EAAE,GAAG8B,KAAL;AAAYZ,QAAAA,MAAM,EAAEa,MAAM,CAACE;AAA3B,OAAP;;AACF,SAAK/B,mBAAL;AACE,aAAO,EAAE,GAAG4B,KAAL;AAAYX,QAAAA,eAAe,EAAEY,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAqB,CAArB,EAAwBN,mBAAxB;AAA7B,OAAP;;AACF,SAAKtB,YAAL;AACE,aAAO,EAAE,GAAGwB,KAAL;AACLV,QAAAA,KAAK,EAAE,EAAE,GAAGU,KAAK,CAACV,KAAX;AACL,WAACW,MAAM,CAACI,YAAR,GACE,EAAE,GAAGL,KAAK,CAACV,KAAN,CAAYW,MAAM,CAACI,YAAnB,CAAL;AAAuC,eAAGJ,MAAM,CAACE;AAAjD;AAFG;AADF,OAAP;;AAIF,SAAK9B,UAAL;AACE,aAAO,EAAE,GAAG2B,KAAL;AAAYL,QAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgBM,MAAM,CAACE,OAAvB;AAAlB,OAAP;;AACF,SAAKlC,YAAL;AACE,aAAO,EAAE,GAAG+B,KAAL;AAAYJ,QAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoBK,MAAM,CAACE,OAA3B;AAAtB,OAAP;;AACF,SAAK5B,WAAL;AACE,aAAO,EAAE,GAAGyB,KAAL;AACLJ,QAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAN,CACXR,MADW,CACJ,CAAC;AAAEkB,UAAAA,EAAF;AAAMJ,UAAAA;AAAN,SAAD,KAAkBI,EAAE,KAAKL,MAAM,CAACE,OAAP,CAAeG,EAAtB,IACrBJ,IAAI,KAAKD,MAAM,CAACE,OAAP,CAAeD,IAFjB,CAAJ;AADL,OAAP;;AAIF;AACE,aAAOF,KAAP;AA1BF;AA4BD,CA7BD;;AA+BA,eAAeD,OAAf","sourcesContent":["import { ADD_CATEGORIES, ADD_FAVORITE, ADD_FILTER, ADD_RECIPES,\n  ADD_RECOMMENDATIONS, END_RECIPE,\n  REQUEST_RECIPES, RM_FAVORITE, START_RECIPE } from '../actions';\n\nconst inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes')) || {};\nconst favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\nconst doneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n\nconst INITIAL_STATE = {\n  list: [],\n  isFetching: true,\n  categories: [],\n  filter: '',\n  recommendations: [],\n  start: { Meal: inProgressRecipes.meals || {},\n    Drink: inProgressRecipes.cocktails || {} },\n  done: doneRecipes,\n  favorite: favoriteRecipes,\n};\n\nconst MAX_RECIPES = 12;\nconst MAX_RECOMMENDATIONS = 6;\n\nconst recipes = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_RECIPES:\n    return { ...state, isFetching: true };\n  case ADD_RECIPES:\n    return { ...state, isFetching: false, list: action.payload.slice(0, MAX_RECIPES) };\n  case ADD_CATEGORIES:\n    return { ...state, categories: action.payload };\n  case ADD_FILTER:\n    return { ...state, filter: action.payload };\n  case ADD_RECOMMENDATIONS:\n    return { ...state, recommendations: action.payload.slice(0, MAX_RECOMMENDATIONS) };\n  case START_RECIPE:\n    return { ...state,\n      start: { ...state.start,\n        [action.selectedType]:\n          { ...state.start[action.selectedType], ...action.payload } } };\n  case END_RECIPE:\n    return { ...state, done: [...state.done, action.payload] };\n  case ADD_FAVORITE:\n    return { ...state, favorite: [...state.favorite, action.payload] };\n  case RM_FAVORITE:\n    return { ...state,\n      favorite: [...state.favorite\n        .filter(({ id, type }) => id !== action.payload.id\n          || type !== action.payload.type)] };\n  default:\n    return state;\n  }\n};\n\nexport default recipes;\n"]},"metadata":{},"sourceType":"module"}