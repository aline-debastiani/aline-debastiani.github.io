{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/components/IngredientsList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport { startRecipe } from '../actions/recipes';\n\nfunction IngredientsList({\n  type,\n  id,\n  ingredients\n}) {\n  const start = useSelector(state => state.recipes.start);\n  const {\n    pathname\n  } = useLocation();\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  const dispatch = useDispatch();\n  const [usedIngredients, setUsedIngredients] = useState(start[type][id] || []);\n\n  const handleChange = index => {\n    if (usedIngredients.includes(index)) {\n      setUsedIngredients([...usedIngredients].filter(ing => ing !== index));\n    } else {\n      setUsedIngredients([...usedIngredients, index]);\n    }\n  };\n\n  useEffect(() => {\n    const {\n      Drink: cocktails,\n      Meal: meals\n    } = start;\n    localStorage.setItem('inProgressRecipes', JSON.stringify({\n      cocktails,\n      meals\n    }));\n  }, [start]);\n  useEffect(() => {\n    dispatch(startRecipe(type, {\n      [id]: usedIngredients\n    }));\n  }, [usedIngredients]);\n\n  if (inProgress) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, ingredients.map((ingsAndMsr, index) => /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: [ingsAndMsr[0]],\n      key: `ing-${index}`,\n      \"data-testid\": `${index}-ingredient-step`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: [ingsAndMsr[0]],\n      onClick: () => handleChange(index),\n      checked: usedIngredients.includes(index),\n      value: [ingsAndMsr[0]],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }), `${[ingsAndMsr[0]]} - ${[ingsAndMsr[1]]}`)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, ingredients.map((ingsAndMsr, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: `ing-${index}`,\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, `${[ingsAndMsr[0]]} - ${[ingsAndMsr[1]]}`)));\n}\n\nIngredientsList.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.array).isRequired\n};\nexport default IngredientsList;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/components/IngredientsList.jsx"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","useLocation","startRecipe","IngredientsList","type","id","ingredients","start","state","recipes","pathname","inProgress","split","dispatch","usedIngredients","setUsedIngredients","handleChange","index","includes","filter","ing","Drink","cocktails","Meal","meals","localStorage","setItem","JSON","stringify","map","ingsAndMsr","propTypes","string","isRequired","arrayOf","array"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport { startRecipe } from '../actions/recipes';\n\nfunction IngredientsList({ type, id, ingredients }) {\n  const start = useSelector((state) => state.recipes.start);\n  const { pathname } = useLocation();\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  const dispatch = useDispatch();\n  const [usedIngredients, setUsedIngredients] = useState(start[type][id] || []);\n\n  const handleChange = (index) => {\n    if (usedIngredients.includes(index)) {\n      setUsedIngredients([...usedIngredients].filter((ing) => ing !== index));\n    } else {\n      setUsedIngredients([...usedIngredients, index]);\n    }\n  };\n\n  useEffect(() => {\n    const { Drink: cocktails, Meal: meals } = start;\n    localStorage.setItem('inProgressRecipes', JSON.stringify({ cocktails, meals }));\n  }, [start]);\n\n  useEffect(() => {\n    dispatch(startRecipe(type, { [id]: usedIngredients }));\n  }, [usedIngredients]);\n\n  if (inProgress) {\n    return (\n      <div>\n        { ingredients\n          .map((ingsAndMsr, index) => (\n            <label\n              htmlFor={ [ingsAndMsr[0]] }\n              key={ `ing-${index}` }\n              data-testid={ `${index}-ingredient-step` }\n            >\n              <input\n                type=\"checkbox\"\n                id={ [ingsAndMsr[0]] }\n                onClick={ () => handleChange(index) }\n                checked={ usedIngredients.includes(index) }\n                value={ [ingsAndMsr[0]] }\n              />\n              { `${[ingsAndMsr[0]]} - ${[ingsAndMsr[1]]}` }\n            </label>))}\n      </div>\n    );\n  }\n\n  return (\n    <ul>\n      { ingredients\n        .map((ingsAndMsr, index) => (\n          <li\n            key={ `ing-${index}` }\n            data-testid={ `${index}-ingredient-name-and-measure` }\n          >\n            { `${[ingsAndMsr[0]]} - ${[ingsAndMsr[1]]}` }\n          </li>))}\n    </ul>\n  );\n}\n\nIngredientsList.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.array).isRequired,\n};\n\nexport default IngredientsList;\n"]},"metadata":{},"sourceType":"module"}