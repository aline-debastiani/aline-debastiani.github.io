{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/components/ProgressButton.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { startRecipe, endRecipe } from '../actions/recipes'; // const formatedObject = (obj, type, id) => {\n//   const { strArea: area = '', strCategory: category = '',\n//     strAlcoholic: alcoholicOrNot = '', [`str${type}`]: name,\n//     [`str${type}Thumb`]: image, doneDate = Date.now(), strTags } = obj;\n//   const tags = !strTags ? [] : strTags.split(',');\n//   const ptType = type === 'Meal' ? 'comida' : 'bebida';\n//   return {\n//     id, area, category, alcoholicOrNot, name, image, type: ptType, doneDate, tags };\n// };\n\nfunction ProgressButton({\n  type,\n  id,\n  ingredientsLength\n}) {\n  const {\n    pathname\n  } = useLocation();\n  const history = useHistory();\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  const {\n    done,\n    start,\n    list\n  } = useSelector(state => state.recipes);\n  const refDone = useRef(done);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (inProgress) {\n      dispatch(endRecipe(list[0]));\n      return;\n    }\n\n    if (!Object.keys(start[type]).includes(id)) {\n      dispatch(startRecipe(type, {\n        [id]: []\n      }));\n    }\n\n    history.push(`${pathname}/in-progress`);\n  };\n\n  useEffect(() => {\n    if (refDone.current.length !== done.length) {\n      localStorage.setItem('doneRecipes', JSON.stringify(done));\n      history.push('/receitas-feitas');\n    }\n  }, [done]);\n\n  const buttonName = () => {\n    if (inProgress) return 'Finalizar Receita';\n    if (Object.keys(start[type]).includes(id)) return 'Continuar Receita';\n    return 'Iniciar Receita';\n  };\n\n  return done.some(({\n    id: currId,\n    type: currType\n  }) => id === currId && type === currType) || /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      display: 'block'\n    },\n    className: \"start\",\n    \"data-testid\": inProgress ? 'finish-recipe-btn' : 'start-recipe-btn',\n    type: \"button\",\n    onClick: handleClick,\n    disabled: inProgress && (start[type][id] || []).length !== ingredientsLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, buttonName());\n}\n\nProgressButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  ingredientsLength: PropTypes.number.isRequired\n};\nexport default ProgressButton;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/components/ProgressButton.jsx"],"names":["React","useEffect","useRef","PropTypes","useDispatch","useSelector","useHistory","useLocation","startRecipe","endRecipe","ProgressButton","type","id","ingredientsLength","pathname","history","inProgress","split","done","start","list","state","recipes","refDone","dispatch","handleClick","Object","keys","includes","push","current","length","localStorage","setItem","JSON","stringify","buttonName","some","currId","currType","display","propTypes","string","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { startRecipe, endRecipe } from '../actions/recipes';\n\n// const formatedObject = (obj, type, id) => {\n//   const { strArea: area = '', strCategory: category = '',\n//     strAlcoholic: alcoholicOrNot = '', [`str${type}`]: name,\n//     [`str${type}Thumb`]: image, doneDate = Date.now(), strTags } = obj;\n//   const tags = !strTags ? [] : strTags.split(',');\n//   const ptType = type === 'Meal' ? 'comida' : 'bebida';\n//   return {\n//     id, area, category, alcoholicOrNot, name, image, type: ptType, doneDate, tags };\n// };\n\nfunction ProgressButton({ type, id, ingredientsLength }) {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  const { done, start, list } = useSelector((state) => state.recipes);\n  const refDone = useRef(done);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (inProgress) {\n      dispatch(endRecipe(list[0]));\n      return;\n    }\n    if (!Object.keys(start[type]).includes(id)) {\n      dispatch(startRecipe(type, { [id]: [] }));\n    }\n    history.push(`${pathname}/in-progress`);\n  };\n\n  useEffect(() => {\n    if (refDone.current.length !== done.length) {\n      localStorage.setItem('doneRecipes', JSON.stringify(done));\n      history.push('/receitas-feitas');\n    }\n  }, [done]);\n\n  const buttonName = () => {\n    if (inProgress) return 'Finalizar Receita';\n    if (Object.keys(start[type]).includes(id)) return 'Continuar Receita';\n    return 'Iniciar Receita';\n  };\n\n  return (\n    done.some(({ id: currId, type: currType }) => id === currId && type === currType)\n          || (\n            <button\n              style={ { display: 'block' } }\n              className=\"start\"\n              data-testid={ inProgress ? 'finish-recipe-btn' : 'start-recipe-btn' }\n              type=\"button\"\n              onClick={ handleClick }\n              disabled={ inProgress\n               && (start[type][id] || []).length !== ingredientsLength }\n            >\n              { buttonName() }\n            </button>\n          )\n  );\n}\n\nProgressButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  ingredientsLength: PropTypes.number.isRequired,\n};\n\nexport default ProgressButton;\n"]},"metadata":{},"sourceType":"module"}