{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/pages/Login.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { Button, Form } from 'react-bootstrap';\nimport login from '../actions/login';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Login.css';\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const {\n    mealsToken,\n    email: user,\n    cocktailsToken\n  } = useSelector(state => state.login);\n\n  const validation = () => {\n    const minPasswordSize = 6;\n    const regex = /.+@[A-z]+[.]com/;\n    const isValidEmail = regex.test(email);\n    const isValidPassword = password.length > minPasswordSize;\n\n    if (isValidPassword && isValidEmail) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(login(email));\n  };\n\n  useEffect(() => {\n    if (user !== '') {\n      localStorage.setItem('mealsToken', mealsToken);\n      localStorage.setItem('user', JSON.stringify({\n        email: user\n      }));\n      localStorage.setItem('cocktailsToken', cocktailsToken);\n      setRedirect(true);\n    }\n  }, [user]);\n  if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/comidas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Email:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    \"data-testid\": \"email-input\",\n    type: \"text\",\n    value: email,\n    onChange: ({\n      target\n    }) => setEmail(target.value),\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Senha:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    \"data-testid\": \"password-input\",\n    type: \"password\",\n    value: password,\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    placeholder: \"Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    className: \"custom-btn\",\n    \"data-testid\": \"login-submit-btn\",\n    disabled: validation(),\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Entrar\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/pages/Login.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Redirect","Button","Form","login","Login","dispatch","email","setEmail","password","setPassword","redirect","setRedirect","mealsToken","user","cocktailsToken","state","validation","minPasswordSize","regex","isValidEmail","test","isValidPassword","length","handleSubmit","event","preventDefault","localStorage","setItem","JSON","stringify","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { Button, Form } from 'react-bootstrap';\nimport login from '../actions/login';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Login.css';\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  const { mealsToken, email: user, cocktailsToken } = useSelector((state) => state.login);\n\n  const validation = () => {\n    const minPasswordSize = 6;\n    const regex = /.+@[A-z]+[.]com/;\n    const isValidEmail = regex.test(email);\n    const isValidPassword = password.length > minPasswordSize;\n    if (isValidPassword && isValidEmail) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(login(email));\n  };\n\n  useEffect(() => {\n    if (user !== '') {\n      localStorage.setItem('mealsToken', mealsToken);\n      localStorage.setItem('user', JSON.stringify({ email: user }));\n      localStorage.setItem('cocktailsToken', cocktailsToken);\n      setRedirect(true);\n    }\n  }, [user]);\n\n  if (redirect) return <Redirect to=\"/comidas\" />;\n\n  return (\n    <section className=\"login\">\n      <form className=\"form\" onSubmit={ handleSubmit }>\n        <Form.Group>\n          <Form.Label>Email:</Form.Label>\n          <Form.Control\n            data-testid=\"email-input\"\n            type=\"text\"\n            value={ email }\n            onChange={ ({ target }) => setEmail(target.value) }\n            placeholder=\"Email\"\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Senha:</Form.Label>\n          <Form.Control\n            data-testid=\"password-input\"\n            type=\"password\"\n            value={ password }\n            onChange={ ({ target }) => setPassword(target.value) }\n            placeholder=\"Senha\"\n          />\n        </Form.Group>\n\n        <Button\n          block\n          className=\"custom-btn\"\n          data-testid=\"login-submit-btn\"\n          disabled={ validation() }\n          type=\"submit\"\n          variant=\"primary\"\n        >\n          Entrar\n        </Button>\n      </form>\n    </section>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}