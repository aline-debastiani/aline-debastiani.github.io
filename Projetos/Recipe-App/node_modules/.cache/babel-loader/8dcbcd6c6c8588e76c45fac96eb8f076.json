{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/pages/ExploreMain.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Footer from '../components/Footer';\nimport { fetchRecipes } from '../actions/recipes';\n\nfunction ExploreMain({\n  location: {\n    pathname\n  }\n}) {\n  const type = pathname.split('/')[2]; // console.log(prevPath);\n  // const selectType = {\n  //   comidas: { 0: 'meals', 1: 'idMeal' },\n  //   bebidas: { 0: 'drinks', 1: 'idDrink' },\n  // };\n  // const type = selectType[prevPath][0];\n  // const idType = selectType[prevPath][1];\n\n  const token = 1;\n  const {\n    list\n  } = useSelector(state => state.recipes);\n  const dispatch = useDispatch(); // const A = [1];\n  // const B = [...A];\n  // A.push(2);\n  // console.log(A);\n  // console.log(B);\n\n  const [id, setId] = useState('');\n  const prevList = useRef(list);\n\n  const handleClick = () => {\n    dispatch(fetchRecipes(token, type, {\n      request: 'random',\n      key: ''\n    }));\n  };\n\n  useEffect(() => {\n    if (list !== prevList.current) {\n      setId(list[0].id);\n    }\n\n    return () => setId('');\n  }, [list]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, `Explorar ${type}`), /*#__PURE__*/React.createElement(Link, {\n    \"data-testid\": \"explore-by-ingredient\",\n    to: `${pathname}/ingredientes`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Por Ingredientes\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), type === 'comidas' && /*#__PURE__*/React.createElement(Link, {\n    \"data-testid\": \"explore-by-area\",\n    to: `${pathname}/area`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Por Local de Origem\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"explore-surprise\",\n    onClick: handleClick,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Me Surpreenda!\"), id && /*#__PURE__*/React.createElement(Redirect, {\n    to: `../${type}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n}\n\nExploreMain.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default ExploreMain;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/pages/ExploreMain.js"],"names":["React","useEffect","useRef","useState","PropTypes","Link","Redirect","useDispatch","useSelector","Footer","fetchRecipes","ExploreMain","location","pathname","type","split","token","list","state","recipes","dispatch","id","setId","prevList","handleClick","request","key","current","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA;AAAF;AAAZ,CAArB,EAAiD;AAC/C,QAAMC,IAAI,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAb,CAD+C,CAE/C;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,KAAK,GAAG,CAAd;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAWT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA5B;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B,CAZ+C,CAc/C;AACA;AAEA;AACA;AACA;;AAEA,QAAM,CAACc,EAAD,EAAKC,KAAL,IAAcnB,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAMoB,QAAQ,GAAGrB,MAAM,CAACe,IAAD,CAAvB;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxBJ,IAAAA,QAAQ,CAACV,YAAY,CAACM,KAAD,EAAQF,IAAR,EAAc;AAAEW,MAAAA,OAAO,EAAE,QAAX;AAAqBC,MAAAA,GAAG,EAAE;AAA1B,KAAd,CAAb,CAAR;AACD,GAFD;;AAIAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,IAAI,KAAKM,QAAQ,CAACI,OAAtB,EAA+B;AAC7BL,MAAAA,KAAK,CAACL,IAAI,CAAC,CAAD,CAAJ,CAAQI,EAAT,CAAL;AACD;;AACD,WAAO,MAAMC,KAAK,CAAC,EAAD,CAAlB;AACD,GALQ,EAKN,CAACL,IAAD,CALM,CAAT;AAOA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,YAAWH,IAAK,EAAvB,CADF,eAEE,oBAAC,IAAD;AAAM,mBAAY,uBAAlB;AAA0C,IAAA,EAAE,EAAI,GAAED,QAAS,eAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAMKC,IAAI,KAAK,SAAV,iBACA,oBAAC,IAAD;AAAM,mBAAY,iBAAlB;AAAoC,IAAA,EAAE,EAAI,GAAED,QAAS,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPJ,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE;AAAQ,mBAAY,kBAApB;AAAuC,IAAA,OAAO,EAAGW,WAAjD;AAA+D,IAAA,IAAI,EAAC,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,EAcIH,EAAE,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAI,MAAKP,IAAK,IAAGO,EAAG,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdV,eAeE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD;;AACDV,WAAW,CAACiB,SAAZ,GAAwB;AACtBhB,EAAAA,QAAQ,EAAER,SAAS,CAACyB,KAAV,CAAgB;AACxBhB,IAAAA,QAAQ,EAAET,SAAS,CAAC0B,MAAV,CAAiBC;AADH,GAAhB,EAEPA;AAHmB,CAAxB;AAMA,eAAepB,WAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Footer from '../components/Footer';\nimport { fetchRecipes } from '../actions/recipes';\n\nfunction ExploreMain({ location: { pathname } }) {\n  const type = pathname.split('/')[2];\n  // console.log(prevPath);\n  // const selectType = {\n  //   comidas: { 0: 'meals', 1: 'idMeal' },\n  //   bebidas: { 0: 'drinks', 1: 'idDrink' },\n  // };\n  // const type = selectType[prevPath][0];\n  // const idType = selectType[prevPath][1];\n  const token = 1;\n\n  const { list } = useSelector((state) => state.recipes);\n  const dispatch = useDispatch();\n\n  // const A = [1];\n  // const B = [...A];\n\n  // A.push(2);\n  // console.log(A);\n  // console.log(B);\n\n  const [id, setId] = useState('');\n  const prevList = useRef(list);\n\n  const handleClick = () => {\n    dispatch(fetchRecipes(token, type, { request: 'random', key: '' }));\n  };\n\n  useEffect(() => {\n    if (list !== prevList.current) {\n      setId(list[0].id);\n    }\n    return () => setId('');\n  }, [list]);\n\n  return (\n    <>\n      <h1>{ `Explorar ${type}` }</h1>\n      <Link data-testid=\"explore-by-ingredient\" to={ `${pathname}/ingredientes` }>\n        Por Ingredientes\n      </Link>\n      <br />\n      { (type === 'comidas') && (\n        <Link data-testid=\"explore-by-area\" to={ `${pathname}/area` }>\n          Por Local de Origem\n        </Link>) }\n      <br />\n      <button data-testid=\"explore-surprise\" onClick={ handleClick } type=\"button\">\n        Me Surpreenda!\n      </button>\n      { id && <Redirect to={ `../${type}/${id}` } /> }\n      <Footer />\n    </>\n  );\n}\nExploreMain.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ExploreMain;\n"]},"metadata":{},"sourceType":"module"}