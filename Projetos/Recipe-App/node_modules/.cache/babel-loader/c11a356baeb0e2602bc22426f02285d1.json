{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/pages/ExploreOrigin.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRecipes, fetchAreas } from '../actions/recipes';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport RecipeCard from '../components/RecipeCard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Explore.css';\n\nfunction ExploreOrigin() {\n  const {\n    list = [],\n    isFetching,\n    areas\n  } = useSelector(state => state.recipes);\n  const {\n    mealsToken\n  } = useSelector(state => state.login);\n  const dispatch = useDispatch();\n  const [selectArea, setSelectArea] = useState('');\n  useEffect(() => {\n    dispatch(fetchAreas(mealsToken));\n    dispatch(fetchRecipes(mealsToken, 'comidas'));\n  }, []);\n\n  const handleChange = ({\n    target\n  }) => {\n    setSelectArea(target.value);\n    const reqType = {\n      request: 'filter',\n      key: 'a',\n      parameter: target.value\n    };\n    dispatch(fetchRecipes(mealsToken, 'comidas', reqType));\n  };\n\n  if (isFetching || list.lenght === 0) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 47\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"select.countryForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Selecione o pa\\xEDs:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    custom: true,\n    \"data-testid\": \"explore-by-area-dropdown\",\n    onChange: handleChange,\n    value: selectArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, areas && [{\n    strArea: 'All'\n  }, ...areas.meals].map(({\n    strArea\n  }) => /*#__PURE__*/React.createElement(\"option\", {\n    \"data-testid\": `${strArea}-option`,\n    key: strArea,\n    value: strArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, strArea))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"cards-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, list && list.map((recipe, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-explore\",\n    key: `recipe-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RecipeCard, {\n    type: \"comidas\",\n    index: index,\n    recipe: recipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ExploreOrigin;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/pages/ExploreOrigin.js"],"names":["React","useEffect","useState","Form","useDispatch","useSelector","fetchRecipes","fetchAreas","Footer","Header","Loading","RecipeCard","ExploreOrigin","list","isFetching","areas","state","recipes","mealsToken","login","dispatch","selectArea","setSelectArea","handleChange","target","value","reqType","request","key","parameter","lenght","strArea","meals","map","recipe","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRecipes, fetchAreas } from '../actions/recipes';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport RecipeCard from '../components/RecipeCard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Explore.css';\n\nfunction ExploreOrigin() {\n  const { list = [], isFetching, areas } = useSelector((state) => state.recipes);\n  const { mealsToken } = useSelector((state) => state.login);\n  const dispatch = useDispatch();\n  const [selectArea, setSelectArea] = useState('');\n\n  useEffect(() => {\n    dispatch(fetchAreas(mealsToken));\n    dispatch(fetchRecipes(mealsToken, 'comidas'));\n  }, []);\n\n  const handleChange = ({ target }) => {\n    setSelectArea(target.value);\n    const reqType = { request: 'filter', key: 'a', parameter: target.value };\n    dispatch(fetchRecipes(mealsToken, 'comidas', reqType));\n  };\n  if (isFetching || list.lenght === 0) return <Loading />;\n  return (\n    <>\n      <Header />\n      <Form className=\"form\">\n        <Form.Group controlId=\"select.countryForm\">\n          <Form.Label>Selecione o pa√≠s:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            custom\n            data-testid=\"explore-by-area-dropdown\"\n            onChange={ handleChange }\n            value={ selectArea }\n          >\n            { areas && [{ strArea: 'All' }, ...areas.meals].map(({ strArea }) => (\n              <option\n                data-testid={ `${strArea}-option` }\n                key={ strArea }\n                value={ strArea }\n              >\n                { strArea }\n              </option>\n            )) }\n          </Form.Control>\n        </Form.Group>\n      </Form>\n      <section className=\"cards-container\">\n        { list && list.map((recipe, index) => (\n          <div className=\"card-explore\" key={ `recipe-${index}` }>\n            <RecipeCard\n              type=\"comidas\"\n              index={ index }\n              recipe={ recipe }\n            />\n          </div>\n        ))}\n      </section>\n      <Footer />\n    </>\n  );\n}\n\nexport default ExploreOrigin;\n"]},"metadata":{},"sourceType":"module"}