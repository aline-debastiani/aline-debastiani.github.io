{"ast":null,"code":"import { ADD_CATEGORIES, ADD_FILTER, ADD_RECIPES, ADD_RECOMMENDATIONS, REQUEST_RECIPES } from '../actions';\nconst INITIAL_STATE = {\n  list: [],\n  isFetching: true,\n  categories: [],\n  filter: '',\n  recommendations: []\n};\nconst MAX_RECIPES = 12;\nconst MAX_RECOMMENDATIONS = 6;\n\nconst recipes = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_RECIPES:\n      return { ...state,\n        isFetching: true\n      };\n\n    case ADD_RECIPES:\n      return { ...state,\n        isFetching: false,\n        list: action.payload.slice(0, MAX_RECIPES)\n      };\n\n    case ADD_CATEGORIES:\n      return { ...state,\n        categories: action.payload\n      };\n\n    case ADD_FILTER:\n      return { ...state,\n        filter: action.payload\n      };\n\n    case ADD_RECOMMENDATIONS:\n      return { ...state,\n        recommendations: action.payload.slice(0, MAX_RECOMMENDATIONS)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default recipes;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/reducers/recipes.js"],"names":["ADD_CATEGORIES","ADD_FILTER","ADD_RECIPES","ADD_RECOMMENDATIONS","REQUEST_RECIPES","INITIAL_STATE","list","isFetching","categories","filter","recommendations","MAX_RECIPES","MAX_RECOMMENDATIONS","recipes","state","action","type","payload","slice"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,UAAzB,EAAqCC,WAArC,EACEC,mBADF,EACuBC,eADvB,QAC8C,YAD9C;AAGA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,UAAU,EAAE,IAFQ;AAGpBC,EAAAA,UAAU,EAAE,EAHQ;AAIpBC,EAAAA,MAAM,EAAE,EAJY;AAKpBC,EAAAA,eAAe,EAAE;AALG,CAAtB;AAQA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,mBAAmB,GAAG,CAA5B;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,aAAT,EAAwBU,MAAxB,KAAmC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKZ,eAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAYP,QAAAA,UAAU,EAAE;AAAxB,OAAP;;AACF,SAAKL,WAAL;AACE,aAAO,EAAE,GAAGY,KAAL;AAAYP,QAAAA,UAAU,EAAE,KAAxB;AAA+BD,QAAAA,IAAI,EAAES,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAqB,CAArB,EAAwBP,WAAxB;AAArC,OAAP;;AACF,SAAKX,cAAL;AACE,aAAO,EAAE,GAAGc,KAAL;AAAYN,QAAAA,UAAU,EAAEO,MAAM,CAACE;AAA/B,OAAP;;AACF,SAAKhB,UAAL;AACE,aAAO,EAAE,GAAGa,KAAL;AAAYL,QAAAA,MAAM,EAAEM,MAAM,CAACE;AAA3B,OAAP;;AACF,SAAKd,mBAAL;AACE,aAAO,EAAE,GAAGW,KAAL;AAAYJ,QAAAA,eAAe,EAAEK,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAqB,CAArB,EAAwBN,mBAAxB;AAA7B,OAAP;;AACF;AACE,aAAOE,KAAP;AAZF;AAcD,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["import { ADD_CATEGORIES, ADD_FILTER, ADD_RECIPES,\n  ADD_RECOMMENDATIONS, REQUEST_RECIPES } from '../actions';\n\nconst INITIAL_STATE = {\n  list: [],\n  isFetching: true,\n  categories: [],\n  filter: '',\n  recommendations: [],\n};\n\nconst MAX_RECIPES = 12;\nconst MAX_RECOMMENDATIONS = 6;\n\nconst recipes = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_RECIPES:\n    return { ...state, isFetching: true };\n  case ADD_RECIPES:\n    return { ...state, isFetching: false, list: action.payload.slice(0, MAX_RECIPES) };\n  case ADD_CATEGORIES:\n    return { ...state, categories: action.payload };\n  case ADD_FILTER:\n    return { ...state, filter: action.payload };\n  case ADD_RECOMMENDATIONS:\n    return { ...state, recommendations: action.payload.slice(0, MAX_RECOMMENDATIONS) };\n  default:\n    return state;\n  }\n};\n\nexport default recipes;\n"]},"metadata":{},"sourceType":"module"}