{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/pages/ExploreMain.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Footer from '../components/Footer';\nimport { fetchRecipes } from '../actions/recipes';\n\nfunction ExploreMain({\n  location: {\n    pathname\n  }\n}) {\n  const prevPath = pathname.split('/')[2];\n  const selectType = {\n    comidas: {\n      0: 'meals',\n      1: 'idMeal'\n    },\n    bebidas: {\n      0: 'drinks',\n      1: 'idDrink'\n    }\n  };\n  const type = selectType[prevPath][0];\n  const idType = selectType[prevPath][1];\n  const token = 1;\n  const {\n    list\n  } = useSelector(state => state.recipes);\n  const dispatch = useDispatch();\n  const [id, setId] = useState('');\n\n  const handleClick = () => {\n    dispatch(fetchRecipes(token, type, {\n      request: 'random',\n      key: ''\n    }));\n  };\n\n  useEffect(() => {\n    if (list.length !== 0) {\n      setId(list[0][idType]);\n    }\n  }, [list]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, `Explorar ${prevPath}`), /*#__PURE__*/React.createElement(Link, {\n    \"data-testid\": \"explore-by-ingredient\",\n    to: `${pathname}/ingredientes`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Por Ingredientes\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), prevPath === 'comidas' && /*#__PURE__*/React.createElement(Link, {\n    \"data-testid\": \"explore-by-area\",\n    to: `${pathname}/area`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Por Local de Origem\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"explore-surprise\",\n    onClick: handleClick,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Me Surpreenda!\"), id && /*#__PURE__*/React.createElement(Redirect, {\n    to: `../${prevPath}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n} // Obs: se a opção escolhida for explorar bebidas, o botão para explorar por local de origem não deve estar disponível.\n\n\nExploreMain.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default ExploreMain;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/pages/ExploreMain.js"],"names":["React","useEffect","useState","PropTypes","Link","Redirect","useDispatch","useSelector","Footer","fetchRecipes","ExploreMain","location","pathname","prevPath","split","selectType","comidas","bebidas","type","idType","token","list","state","recipes","dispatch","id","setId","handleClick","request","key","length","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Footer from '../components/Footer';\nimport { fetchRecipes } from '../actions/recipes';\n\nfunction ExploreMain({ location: { pathname } }) {\n  const prevPath = pathname.split('/')[2];\n  const selectType = {\n    comidas: { 0: 'meals', 1: 'idMeal' },\n    bebidas: { 0: 'drinks', 1: 'idDrink' },\n  };\n  const type = selectType[prevPath][0];\n  const idType = selectType[prevPath][1];\n  const token = 1;\n\n  const { list } = useSelector((state) => state.recipes);\n  const dispatch = useDispatch();\n\n  const [id, setId] = useState('');\n\n  const handleClick = () => {\n    dispatch(fetchRecipes(token, type, { request: 'random', key: '' }));\n  };\n\n  useEffect(() => {\n    if (list.length !== 0) {\n      setId(list[0][idType]);\n    }\n  }, [list]);\n\n  return (\n    <>\n      <h1>{ `Explorar ${prevPath}` }</h1>\n      <Link data-testid=\"explore-by-ingredient\" to={ `${pathname}/ingredientes` }>\n        Por Ingredientes\n      </Link>\n      <br />\n      { (prevPath === 'comidas') && (\n        <Link data-testid=\"explore-by-area\" to={ `${pathname}/area` }>\n          Por Local de Origem\n        </Link>) }\n      <br />\n      <button data-testid=\"explore-surprise\" onClick={ handleClick } type=\"button\">\n        Me Surpreenda!\n      </button>\n      { id && <Redirect to={ `../${prevPath}/${id}` } /> }\n      <Footer />\n    </>\n  );\n}\n// Obs: se a opção escolhida for explorar bebidas, o botão para explorar por local de origem não deve estar disponível.\nExploreMain.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ExploreMain;\n"]},"metadata":{},"sourceType":"module"}