{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/components/ProgressButton.jsx\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { startRecipe, endRecipe } from '../actions/recipes';\n\nconst formatedObject = (obj, type) => {\n  const {\n    strArea: area = '',\n    strCategory: category = '',\n    strAlcoholic: alcoholicOrNot = '',\n    [`str${type}`]: name,\n    [`str${type}Thumb`]: image,\n    doneDate = Date.now(),\n    strTags\n  } = obj;\n  const tags = !strTags ? [] : strTags.split(',');\n  const ptType = type === 'Meal' ? 'comida' : 'bebida';\n  return {\n    id,\n    area,\n    category,\n    alcoholicOrNot,\n    name,\n    image,\n    type: ptType,\n    doneDate,\n    tags\n  };\n};\n\nfunction ProgressButton({\n  type,\n  id,\n  ingredientsLength\n}) {\n  const {\n    pathname\n  } = useLocation();\n  const history = useHistory();\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  const {\n    done,\n    start,\n    list\n  } = useSelector(state => state.recipes);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (inProgress) {\n      dispatch(endRecipe(formatedObject(list[0], type)));\n      history.push('/receitas-feitas');\n      return;\n    }\n\n    if (!Object.keys(start[type]).includes(id)) {\n      dispatch(startRecipe(type, {\n        [id]: []\n      }));\n    }\n\n    history.push(`${pathname}/in-progress`);\n  };\n\n  useEffect(() => () => localStorage.setItem('doneRecipes', JSON.stringify(done)), [done]);\n\n  const buttonName = () => {\n    if (inProgress) return 'Finalizar Receita';\n    if (Object.keys(start[type]).includes(id)) return 'Continuar Receita';\n    return 'Iniciar Receita';\n  };\n\n  return done.some(({\n    id: currId,\n    type: currType\n  }) => id === currId && type === currType) || /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start\",\n    \"data-testid\": inProgress ? 'finish-recipe-btn' : 'start-recipe-btn',\n    type: \"button\",\n    onClick: handleClick,\n    disabled: inProgress && (start[type][id] || []).length !== ingredientsLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, buttonName());\n}\n\nProgressButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  ingredientsLength: PropTypes.number.isRequired\n};\nexport default ProgressButton;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/components/ProgressButton.jsx"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","useHistory","useLocation","startRecipe","endRecipe","formatedObject","obj","type","strArea","area","strCategory","category","strAlcoholic","alcoholicOrNot","name","image","doneDate","Date","now","strTags","tags","split","ptType","id","ProgressButton","ingredientsLength","pathname","history","inProgress","done","start","list","state","recipes","dispatch","handleClick","push","Object","keys","includes","localStorage","setItem","JSON","stringify","buttonName","some","currId","currType","length","propTypes","string","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { startRecipe, endRecipe } from '../actions/recipes';\n\nconst formatedObject = (obj, type) => {\n  const { strArea: area = '', strCategory: category = '',\n    strAlcoholic: alcoholicOrNot = '', [`str${type}`]: name,\n    [`str${type}Thumb`]: image, doneDate = Date.now(), strTags } = obj;\n  const tags = !strTags ? [] : strTags.split(',');\n  const ptType = type === 'Meal' ? 'comida' : 'bebida';\n  return {\n    id, area, category, alcoholicOrNot, name, image, type: ptType, doneDate, tags };\n};\n\nfunction ProgressButton({ type, id, ingredientsLength }) {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  const { done, start, list } = useSelector((state) => state.recipes);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (inProgress) {\n      dispatch(endRecipe(formatedObject(list[0], type)));\n      history.push('/receitas-feitas');\n      return;\n    }\n    if (!Object.keys(start[type]).includes(id)) {\n      dispatch(startRecipe(type, { [id]: [] }));\n    }\n    history.push(`${pathname}/in-progress`);\n  };\n\n  useEffect(() => (\n    () => localStorage.setItem('doneRecipes', JSON.stringify(done))\n  ), [done]);\n\n  const buttonName = () => {\n    if (inProgress) return 'Finalizar Receita';\n    if (Object.keys(start[type]).includes(id)) return 'Continuar Receita';\n    return 'Iniciar Receita';\n  };\n\n  return (\n    done.some(({ id: currId, type: currType }) => id === currId && type === currType)\n          || (\n            <button\n              className=\"start\"\n              data-testid={ inProgress ? 'finish-recipe-btn' : 'start-recipe-btn' }\n              type=\"button\"\n              onClick={ handleClick }\n              disabled={ inProgress\n               && (start[type][id] || []).length !== ingredientsLength }\n            >\n              { buttonName() }\n            </button>\n          )\n  );\n}\n\nProgressButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  ingredientsLength: PropTypes.number.isRequired,\n};\n\nexport default ProgressButton;\n"]},"metadata":{},"sourceType":"module"}