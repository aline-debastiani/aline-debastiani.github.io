{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/pages/RecipeDetails.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRecipes, fetchRecommendations } from '../actions/recipes';\nimport Loading from '../components/Loading';\nimport RecipeCard from '../components/RecipeCard';\nimport IngredientsList from '../components/IngredientsList';\nimport ProgressButton from '../components/ProgressButton';\nimport FavButton from '../components/FavButton';\nimport ShareButton from '../components/ShareButton';\nimport './RecipeDetails.css';\n\nfunction RecipeDetails({\n  match: {\n    params\n  },\n  location: {\n    pathname\n  }\n}) {\n  const {\n    list,\n    isFetching,\n    recommendations\n  } = useSelector(state => state.recipes);\n  const dispatch = useDispatch();\n  const [shouldFetch, setShouldFetch] = useState(true); // const prevList = useRef([...list]);\n  // const selectType = { comidas: 'meals', bebidas: 'drinks' };\n  // const inProgress = pathname.split('/')[3] === 'in-progress';\n  // const type = selectType[pathname.split('/')[1]];\n  // const type = pathname.split('/')[1];\n  // const recommendationsType = type === 'comidas' ? 'bebidas' : 'comidas';\n\n  const token = 1;\n  const inProgress = pathname.split('/')[3] === 'in-progress'; // const inProgress = pathname.split('/')[3] === 'in-progress';\n\n  const type = useRef(pathname.split('/')[1]);\n  const recommendationsType = useRef(type.current === 'comidas' ? 'bebidas' : 'comidas');\n  useEffect(() => {\n    // console.log(recommendationsType);\n    setShouldFetch(true);\n    [type.current] = pathname.split('/').slice(1);\n    recommendationsType.current = type.current === 'comidas' ? 'bebidas' : 'comidas';\n    dispatch(fetchRecipes(token, type.current, {\n      request: 'lookup',\n      key: 'i',\n      parameter: params.id\n    }));\n    dispatch(fetchRecommendations(token, recommendationsType.current));\n    setShouldFetch(false);\n  }, [params, pathname]);\n  const recipe = list[0];\n  console.log('aqui');\n  const IngredientKeys = Object.keys(recipe || {}).filter(ingKey => ingKey.startsWith('strIngredient') && recipe[ingKey] !== '' && recipe[ingKey] !== null);\n  const IngredientsAndMeasures = IngredientKeys.map((key, index) => [recipe[key], recipe[`strMeasure${index + 1}`]]); // const formatedType = type[0].toUpperCase() + type.slice(1, 0 - 1);\n\n  return isFetching || shouldFetch || !recipe ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 44\n    }\n  }) : /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"recipe-photo\",\n    \"data-testid\": \"recipe-photo\",\n    src: recipe.image,\n    alt: recipe.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, recipe.name), /*#__PURE__*/React.createElement(ShareButton, {\n    type: type.current,\n    id: params.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FavButton, {\n    type: type.current,\n    recipe: recipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, `${recipe.alcoholicOrNot} ${recipe.category}`), /*#__PURE__*/React.createElement(IngredientsList, {\n    id: params.id,\n    type: type.current,\n    ingredients: IngredientsAndMeasures,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, recipe.strInstructions), recipe.strYoutube && /*#__PURE__*/React.createElement(\"iframe\", {\n    src: recipe.strYoutube.split('watch?v=').join('embed/'),\n    title: \"Video\",\n    \"data-testid\": \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }\n  }), !inProgress && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recommendations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, recommendations.map((recommendation, index) => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-recomendation-card`,\n    key: `rec-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RecipeCard, {\n    index: index,\n    type: recommendationsType.current,\n    recipe: recommendation,\n    recommendation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(ProgressButton, {\n    id: params.id,\n    type: type.current,\n    ingredientsLength: IngredientsAndMeasures.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }));\n}\n\nRecipeDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default RecipeDetails;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/pages/RecipeDetails.jsx"],"names":["React","useEffect","useRef","useState","PropTypes","useDispatch","useSelector","fetchRecipes","fetchRecommendations","Loading","RecipeCard","IngredientsList","ProgressButton","FavButton","ShareButton","RecipeDetails","match","params","location","pathname","list","isFetching","recommendations","state","recipes","dispatch","shouldFetch","setShouldFetch","token","inProgress","split","type","recommendationsType","current","slice","request","key","parameter","id","recipe","console","log","IngredientKeys","Object","keys","filter","ingKey","startsWith","IngredientsAndMeasures","map","index","image","name","alcoholicOrNot","category","strInstructions","strYoutube","join","recommendation","length","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRecipes, fetchRecommendations } from '../actions/recipes';\n\nimport Loading from '../components/Loading';\nimport RecipeCard from '../components/RecipeCard';\nimport IngredientsList from '../components/IngredientsList';\nimport ProgressButton from '../components/ProgressButton';\nimport FavButton from '../components/FavButton';\nimport ShareButton from '../components/ShareButton';\n\nimport './RecipeDetails.css';\n\nfunction RecipeDetails({ match: { params }, location: { pathname } }) {\n  const { list, isFetching, recommendations } = useSelector((state) => state.recipes);\n  const dispatch = useDispatch();\n\n  const [shouldFetch, setShouldFetch] = useState(true);\n  // const prevList = useRef([...list]);\n\n  // const selectType = { comidas: 'meals', bebidas: 'drinks' };\n  // const inProgress = pathname.split('/')[3] === 'in-progress';\n  // const type = selectType[pathname.split('/')[1]];\n  // const type = pathname.split('/')[1];\n  // const recommendationsType = type === 'comidas' ? 'bebidas' : 'comidas';\n\n  const token = 1;\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  // const inProgress = pathname.split('/')[3] === 'in-progress';\n  const type = useRef(pathname.split('/')[1]);\n  const recommendationsType = useRef(type.current === 'comidas' ? 'bebidas' : 'comidas');\n\n  useEffect(() => {\n    // console.log(recommendationsType);\n    setShouldFetch(true);\n    [type.current] = pathname.split('/').slice(1);\n    recommendationsType.current = type.current === 'comidas' ? 'bebidas' : 'comidas';\n    dispatch(fetchRecipes(token, type.current,\n      { request: 'lookup', key: 'i', parameter: params.id }));\n    dispatch(fetchRecommendations(token, recommendationsType.current));\n    setShouldFetch(false);\n  }, [params, pathname]);\n\n  const recipe = list[0];\n  console.log('aqui');\n  const IngredientKeys = Object.keys(recipe || {})\n    .filter((ingKey) => (\n      ingKey\n        .startsWith('strIngredient')\n        && recipe[ingKey] !== '' && recipe[ingKey] !== null));\n  const IngredientsAndMeasures = IngredientKeys\n    .map((key, index) => [recipe[key], recipe[`strMeasure${index + 1}`]]);\n  // const formatedType = type[0].toUpperCase() + type.slice(1, 0 - 1);\n\n  return (\n    isFetching || shouldFetch || !recipe ? <Loading /> : (\n      <section>\n        <img\n          className=\"recipe-photo\"\n          data-testid=\"recipe-photo\"\n          src={ recipe.image }\n          alt={ recipe.name }\n        />\n        <h1 data-testid=\"recipe-title\">{ recipe.name }</h1>\n        <ShareButton type={ type.current } id={ params.id } />\n        <FavButton type={ type.current } recipe={ recipe } />\n        <h2 data-testid=\"recipe-category\">\n          { `${recipe.alcoholicOrNot} ${recipe.category}` }\n        </h2>\n        <IngredientsList\n          id={ params.id }\n          type={ type.current }\n          ingredients={ IngredientsAndMeasures }\n        />\n        <p data-testid=\"instructions\">{ recipe.strInstructions }</p>\n        { recipe.strYoutube\n        && <iframe\n          src={ recipe.strYoutube.split('watch?v=').join('embed/') }\n          title=\"Video\"\n          data-testid=\"video\"\n        /> }\n        { !inProgress && (\n          <div className=\"recommendations\">\n            { recommendations.map((recommendation, index) => (\n              <div data-testid={ `${index}-recomendation-card` } key={ `rec-${index}` }>\n                <RecipeCard\n                  index={ index }\n                  type={ recommendationsType.current }\n                  recipe={ recommendation }\n                  recommendation\n                />\n              </div>)) }\n          </div>)}\n        <ProgressButton\n          id={ params.id }\n          type={ type.current }\n          ingredientsLength={ IngredientsAndMeasures.length }\n        />\n      </section>\n    ));\n}\n\nRecipeDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default RecipeDetails;\n"]},"metadata":{},"sourceType":"module"}