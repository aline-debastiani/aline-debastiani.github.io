{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/pages/RecipesDone.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport shareIcon from \"../images/shareIcon.svg\";\n\nfunction RecipesDone() {\n  const [doneRecipes, setDoneRecipes] = useState({});\n\n  if (localStorage.getItem('doneRecipes') === null) {\n    const newArrayDoneRecipes = [];\n    localStorage.setItem('doneRecipes', JSON.stringify(newArrayDoneRecipes));\n  }\n\n  useEffect(() => {\n    if (!localStorage.doneRecipes) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      }, \"Voc\\xEA ainda n\\xE3o tem nenhuma receita pronta.\");\n    }\n\n    setDoneRecipes(JSON.parse(localStorage.doneRecipes));\n  }, []);\n\n  const filterRecipes = ({\n    innerText\n  }) => {\n    if (innerText === 'Food') {\n      const newDone = doneRecipes.filter(done => done.type === 'comida');\n      setDoneRecipes(newDone);\n    } else if (innerText === 'Drinks') {\n      const newDone = doneRecipes.filter(done => done.type === 'bebida');\n      setDoneRecipes(newDone);\n    } else {\n      setDoneRecipes(JSON.parse(localStorage.doneRecipes));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: ({\n      target\n    }) => {\n      filterRecipes(target);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: ({\n      target\n    }) => {\n      filterRecipes(target);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: ({\n      target\n    }) => {\n      filterRecipes(target);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Drinks\"), doneRecipes.map(({\n    id,\n    type,\n    image,\n    alcoholicOrNot,\n    name,\n    area,\n    category,\n    doneDate,\n    tags\n  }, indexRecipe) => /*#__PURE__*/React.createElement(\"span\", {\n    key: indexRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"receipe-img\",\n    src: image,\n    alt: name,\n    \"data-testid\": `${indexRecipe}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": `${indexRecipe}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, name)), type === 'comida' ? /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${indexRecipe}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, `${area} - ${category}`) : /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${indexRecipe}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, alcoholicOrNot), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${indexRecipe}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, doneDate)), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"share-btn\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"Compatilhar Receita\",\n    \"data-testid\": `${indexRecipe}-horizontal-share-btn`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })), isCopied ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, \"Link copiado!\") : true, tags.map((tag, indexTag) => /*#__PURE__*/React.createElement(\"p\", {\n    key: indexTag,\n    \"data-testid\": `${indexRecipe}-${tags[indexTag]}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, tag)))));\n}\n\nexport default RecipesDone;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/pages/RecipesDone.js"],"names":["React","useEffect","useState","Link","RecipesDone","doneRecipes","setDoneRecipes","localStorage","getItem","newArrayDoneRecipes","setItem","JSON","stringify","parse","filterRecipes","innerText","newDone","filter","done","type","target","map","id","image","alcoholicOrNot","name","area","category","doneDate","tags","indexRecipe","shareIcon","isCopied","tag","indexTag"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction RecipesDone() {\n  const [doneRecipes, setDoneRecipes] = useState({});\n\n  if (localStorage.getItem('doneRecipes') === null) {\n    const newArrayDoneRecipes = [];\n    localStorage.setItem('doneRecipes', JSON.stringify(newArrayDoneRecipes));\n  }\n\n  useEffect(() => {\n    if (!localStorage.doneRecipes) {\n      return <p>Você ainda não tem nenhuma receita pronta.</p>;\n    }\n    setDoneRecipes(JSON.parse(localStorage.doneRecipes));\n  }, []);\n\n  const filterRecipes = ({ innerText }) => {\n    if (innerText === 'Food') {\n      const newDone = doneRecipes.filter((done) => (\n        done.type === 'comida'\n      ));\n      setDoneRecipes(newDone);\n    } else if (innerText === 'Drinks') {\n      const newDone = doneRecipes.filter((done) => (\n        done.type === 'bebida'\n      ));\n      setDoneRecipes(newDone);\n    } else {\n      setDoneRecipes(JSON.parse(localStorage.doneRecipes));\n    }\n  };\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={ ({ target }) => { filterRecipes(target); } }\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={ ({ target }) => { filterRecipes(target); } }\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={ ({ target }) => { filterRecipes(target); } }\n      >\n        Drinks\n      </button>\n      {doneRecipes\n        .map((\n          { id,\n            type,\n            image,\n            alcoholicOrNot,\n            name,\n            area,\n            category,\n            doneDate,\n            tags,\n          },\n          indexRecipe,\n        ) => (\n          <span\n            key={ indexRecipe }\n          >\n            <Link to={ `/${type}s/${id}` }>\n              <img\n                className=\"receipe-img\"\n                src={ image }\n                alt={ name }\n                data-testid={ `${indexRecipe}-horizontal-image` }\n              />\n            </Link>\n            <div>\n              <Link to={ `/${type}s/${id}` }>\n                <h1\n                  data-testid={ `${indexRecipe}-horizontal-name` }\n                >\n                  {name}\n                </h1>\n              </Link>\n              {\n                (type === 'comida')\n                  ? (\n                    <p\n                      data-testid={ `${indexRecipe}-horizontal-top-text` }\n                    >\n                      { `${area} - ${category}`}\n                    </p>)\n                  : (\n                    <p data-testid={ `${indexRecipe}-horizontal-top-text` }>\n                      { alcoholicOrNot }\n                    </p>)\n              }\n              <p\n                data-testid={ `${indexRecipe}-horizontal-done-date` }\n              >\n                {doneDate}\n              </p>\n            </div>\n            <button\n              data-testid=\"share-btn\"\n              type=\"button\"\n            >\n              <img\n                src={ shareIcon }\n                alt=\"Compatilhar Receita\"\n                data-testid={ `${indexRecipe}-horizontal-share-btn` }\n              />\n            </button>\n            {isCopied ? <p>Link copiado!</p> : true}\n            {tags.map((tag, indexTag) => (\n              <p\n                key={ indexTag }\n                data-testid={ `${indexRecipe}-${tags[indexTag]}-horizontal-tag` }\n              >\n                { tag }\n              </p>\n            ))}\n          </span>\n        ))}\n    </div>\n  );\n}\n\nexport default RecipesDone;\n"]},"metadata":{},"sourceType":"module"}