{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/components/ProgressButton.jsx\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { startRecipe, endRecipe } from '../actions/recipes';\n\nfunction ProgressButton({\n  type,\n  id,\n  ingredientsLength\n}) {\n  const {\n    pathname\n  } = useLocation();\n  const history = useHistory();\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  const {\n    done,\n    start,\n    list\n  } = useSelector(state => state.recipes);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (inProgress) {\n      const {\n        strArea: area = '',\n        strCategory: category = '',\n        strAlcoholic: alcoholicOrNot = '',\n        [`str${type}`]: name,\n        [`str${type}Thumb`]: image,\n        doneDate = Date.now(),\n        strTags\n      } = list[0];\n      const tags = !strTags ? [] : strTags.split(',');\n      const formatedType = type === 'Meal' ? 'comida' : 'bebida';\n      const formatedRecipe = {\n        id,\n        area,\n        category,\n        alcoholicOrNot,\n        name,\n        image,\n        type: formatedType,\n        doneDate,\n        tags\n      };\n      dispatch(endRecipe(formatedRecipe));\n      return;\n    }\n\n    if (!Object.keys(start[type]).includes(id)) {\n      dispatch(startRecipe(type, {\n        [id]: []\n      }));\n    }\n\n    history.push(`${pathname}/in-progress`);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('doneRecipes', JSON.stringify(done));\n    history.push('/receitas-feitas');\n  }, [done]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, done.some(({\n    id: currId,\n    type: currType\n  }) => id === currId && type === currType) || /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start\",\n    \"data-testid\": inProgress ? 'finish-recipe-btn' : 'start-recipe-btn',\n    type: \"button\",\n    onClick: handleClick,\n    disabled: inProgress && (start[type][id] || []).length !== ingredientsLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, inProgress && 'Finalizar Receita', !inProgress && (Object.keys(start[type]).includes(id) ? 'Continuar Receita' : 'Iniciar Receita')));\n}\n\nProgressButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  ingredientsLength: PropTypes.number.isRequired\n};\nexport default ProgressButton;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/components/ProgressButton.jsx"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","useHistory","useLocation","startRecipe","endRecipe","ProgressButton","type","id","ingredientsLength","pathname","history","inProgress","split","done","start","list","state","recipes","dispatch","handleClick","strArea","area","strCategory","category","strAlcoholic","alcoholicOrNot","name","image","doneDate","Date","now","strTags","tags","formatedType","formatedRecipe","Object","keys","includes","push","localStorage","setItem","JSON","stringify","some","currId","currType","length","propTypes","string","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { startRecipe, endRecipe } from '../actions/recipes';\n\nfunction ProgressButton({ type, id, ingredientsLength }) {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const inProgress = pathname.split('/')[3] === 'in-progress';\n  const { done, start, list } = useSelector((state) => state.recipes);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (inProgress) {\n      const { strArea: area = '', strCategory: category = '',\n        strAlcoholic: alcoholicOrNot = '', [`str${type}`]: name,\n        [`str${type}Thumb`]: image, doneDate = Date.now(), strTags } = list[0];\n      const tags = !strTags ? [] : strTags.split(',');\n      const formatedType = type === 'Meal' ? 'comida' : 'bebida';\n      const formatedRecipe = {\n        id, area, category, alcoholicOrNot, name, image, type: formatedType, doneDate, tags };\n      dispatch(endRecipe(formatedRecipe));\n      return;\n    }\n    if (!Object.keys(start[type]).includes(id)) {\n      dispatch(startRecipe(type, { [id]: [] }));\n    }\n    history.push(`${pathname}/in-progress`);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('doneRecipes', JSON.stringify(done));\n    history.push('/receitas-feitas');\n  }, [done]);\n\n  return (\n    <div>\n      { done.some(({ id: currId, type: currType }) => id === currId && type === currType)\n          || (\n            <button\n              className=\"start\"\n              data-testid={ inProgress ? 'finish-recipe-btn' : 'start-recipe-btn' }\n              type=\"button\"\n              onClick={ handleClick }\n              disabled={ inProgress\n               && (start[type][id] || []).length !== ingredientsLength }\n            >\n              { inProgress && 'Finalizar Receita' }\n              { !inProgress && (Object.keys(start[type])\n                .includes(id) ? 'Continuar Receita' : 'Iniciar Receita') }\n            </button>\n          )}\n    </div>\n  );\n}\n\nProgressButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  ingredientsLength: PropTypes.number.isRequired,\n};\n\nexport default ProgressButton;\n"]},"metadata":{},"sourceType":"module"}