{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/components/IngredientsList.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction IngredientsList({\n  ingredients,\n  inProgress\n}) {\n  if (inProgress) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, ingredients.map((ingsAndMsr, index) => /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: [ingsAndMsr[0]],\n      key: `ing-${index}`,\n      \"data-testid\": `${index}-ingredient-step`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: [ingsAndMsr[0]],\n      value: [ingsAndMsr[0]],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }\n    }), `${[ingsAndMsr[0]]} - ${[ingsAndMsr[1]]}`)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, ingredients.map((ingsAndMsr, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: `ing-${index}`,\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, `${[ingsAndMsr[0]]} - ${[ingsAndMsr[1]]}`)));\n}\n\nIngredientsList.defaultProps = {\n  inProgress: false\n};\nIngredientsList.propTypes = {\n  ingredients: PropTypes.arrayOf(PropTypes.array).isRequired,\n  inProgress: PropTypes.bool\n};\nexport default IngredientsList;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/components/IngredientsList.jsx"],"names":["React","PropTypes","IngredientsList","ingredients","inProgress","map","ingsAndMsr","index","defaultProps","propTypes","arrayOf","array","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAzB,EAAsD;AACpD,MAAIA,UAAJ,EAAgB;AACd,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,WAAW,CACVE,GADD,CACK,CAACC,UAAD,EAAaC,KAAb,kBACH;AACE,MAAA,OAAO,EAAG,CAACD,UAAU,CAAC,CAAD,CAAX,CADZ;AAEE,MAAA,GAAG,EAAI,OAAMC,KAAM,EAFrB;AAGE,qBAAe,GAAEA,KAAM,kBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAG,CAACD,UAAU,CAAC,CAAD,CAAX,CAA5B;AAA8C,MAAA,KAAK,EAAG,CAACA,UAAU,CAAC,CAAD,CAAX,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMK,GAAE,CAACA,UAAU,CAAC,CAAD,CAAX,CAAgB,MAAK,CAACA,UAAU,CAAC,CAAD,CAAX,CAAgB,EAN5C,CAFF,CADJ,CADF;AAcD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,WAAW,CACVE,GADD,CACK,CAACC,UAAD,EAAaC,KAAb,kBACH;AACE,IAAA,GAAG,EAAI,OAAMA,KAAM,EADrB;AAEE,mBAAe,GAAEA,KAAM,8BAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIK,GAAE,CAACD,UAAU,CAAC,CAAD,CAAX,CAAgB,MAAK,CAACA,UAAU,CAAC,CAAD,CAAX,CAAgB,EAJ5C,CAFF,CADJ,CADF;AAYD;;AAEDJ,eAAe,CAACM,YAAhB,GAA+B;AAC7BJ,EAAAA,UAAU,EAAE;AADiB,CAA/B;AAIAF,eAAe,CAACO,SAAhB,GAA4B;AAC1BN,EAAAA,WAAW,EAAEF,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,KAA5B,EAAmCC,UADtB;AAE1BR,EAAAA,UAAU,EAAEH,SAAS,CAACY;AAFI,CAA5B;AAKA,eAAeX,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction IngredientsList({ ingredients, inProgress }) {\n  if (inProgress) {\n    return (\n      <div>\n        { ingredients\n          .map((ingsAndMsr, index) => (\n            <label\n              htmlFor={ [ingsAndMsr[0]] }\n              key={ `ing-${index}` }\n              data-testid={ `${index}-ingredient-step` }\n            >\n              <input type=\"checkbox\" id={ [ingsAndMsr[0]] } value={ [ingsAndMsr[0]] } />\n              { `${[ingsAndMsr[0]]} - ${[ingsAndMsr[1]]}` }\n            </label>))}\n      </div>\n    );\n  }\n\n  return (\n    <ul>\n      { ingredients\n        .map((ingsAndMsr, index) => (\n          <li\n            key={ `ing-${index}` }\n            data-testid={ `${index}-ingredient-name-and-measure` }\n          >\n            { `${[ingsAndMsr[0]]} - ${[ingsAndMsr[1]]}` }\n          </li>))}\n    </ul>\n  );\n}\n\nIngredientsList.defaultProps = {\n  inProgress: false,\n};\n\nIngredientsList.propTypes = {\n  ingredients: PropTypes.arrayOf(PropTypes.array).isRequired,\n  inProgress: PropTypes.bool,\n};\n\nexport default IngredientsList;\n"]},"metadata":{},"sourceType":"module"}