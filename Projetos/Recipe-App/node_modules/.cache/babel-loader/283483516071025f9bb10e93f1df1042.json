{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/components/FavButton.jsx\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFavorite, removeFavorite } from '../actions/recipes';\nimport FavIcon from \"../images/whiteHeartIcon.svg\";\nimport BlackFavIcon from \"../images/blackHeartIcon.svg\";\n\nfunction FavButton({\n  type,\n  recipe\n}) {\n  const favorite = useSelector(state => state.recipes.favorite);\n  const dispatch = useDispatch();\n  const formatedType = type === 'Meal' ? 'comida' : 'bebida';\n\n  const handleClick = () => {\n    const fav = favorite.find(currRec => recipe[`id${type}`] === currRec.id && currRec.type === formatedType);\n    const {\n      [`id${type}`]: id,\n      strArea: area = '',\n      strCategory: category = '',\n      strAlcoholic: alcoholicOrNot = '',\n      [`str${type}`]: name,\n      [`str${type}Thumb`]: image\n    } = recipe;\n    const formatedRecipe = {\n      id,\n      area,\n      category,\n      alcoholicOrNot,\n      name,\n      image,\n      type: formatedType\n    };\n\n    if (fav) {\n      dispatch(removeFavorite(formatedRecipe));\n    } else dispatch(addFavorite(formatedRecipe));\n  };\n\n  useEffect(() => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favorite));\n  }, [favorite]);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: favorite.some(rec => recipe[`id${type}`] === rec.id && rec.type === formatedType) ? BlackFavIcon : FavIcon,\n    alt: \"favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\n\nFavButton.propTypes = {\n  recipe: PropTypes.shape().isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default FavButton;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/components/FavButton.jsx"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","addFavorite","removeFavorite","FavButton","type","recipe","favorite","state","recipes","dispatch","formatedType","handleClick","fav","find","currRec","id","strArea","area","strCategory","category","strAlcoholic","alcoholicOrNot","name","image","formatedRecipe","localStorage","setItem","JSON","stringify","some","rec","BlackFavIcon","FavIcon","propTypes","shape","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,oBAA5C;;;;AAIA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAnB,EAAqC;AACnC,QAAMC,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,QAA1B,CAA5B;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,YAAY,GAAGN,IAAI,KAAK,MAAT,GAAkB,QAAlB,GAA6B,QAAlD;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxB,UAAMC,GAAG,GAAGN,QAAQ,CACjBO,IADS,CAEPC,OAAD,IAAaT,MAAM,CAAE,KAAID,IAAK,EAAX,CAAN,KAAwBU,OAAO,CAACC,EAAhC,IAAsCD,OAAO,CAACV,IAAR,KAAiBM,YAF5D,CAAZ;AAIA,UAAM;AAAE,OAAE,KAAIN,IAAK,EAAX,GAAeW,EAAjB;AAAqBC,MAAAA,OAAO,EAAEC,IAAI,GAAG,EAArC;AAAyCC,MAAAA,WAAW,EAAEC,QAAQ,GAAG,EAAjE;AACJC,MAAAA,YAAY,EAAEC,cAAc,GAAG,EAD3B;AAC+B,OAAE,MAAKjB,IAAK,EAAZ,GAAgBkB,IAD/C;AAEJ,OAAE,MAAKlB,IAAK,OAAZ,GAAqBmB;AAFjB,QAE2BlB,MAFjC;AAGA,UAAMmB,cAAc,GAAG;AACrBT,MAAAA,EADqB;AACjBE,MAAAA,IADiB;AACXE,MAAAA,QADW;AACDE,MAAAA,cADC;AACeC,MAAAA,IADf;AACqBC,MAAAA,KADrB;AAC4BnB,MAAAA,IAAI,EAAEM;AADlC,KAAvB;;AAEA,QAAIE,GAAJ,EAAS;AACPH,MAAAA,QAAQ,CAACP,cAAc,CAACsB,cAAD,CAAf,CAAR;AACD,KAFD,MAEOf,QAAQ,CAACR,WAAW,CAACuB,cAAD,CAAZ,CAAR;AACR,GAbD;;AAeA3B,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAetB,QAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAGK,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAY,cADd;AAEE,IAAA,GAAG,EAAGL,QAAQ,CACXuB,IADG,CACGC,GAAD,IAASzB,MAAM,CAAE,KAAID,IAAK,EAAX,CAAN,KAAwB0B,GAAG,CAACf,EAA5B,IAAkCe,GAAG,CAAC1B,IAAJ,KAAaM,YAD1D,IAEFqB,YAFE,GAEaC,OAJrB;AAKE,IAAA,GAAG,EAAC,UALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD;;AAED7B,SAAS,CAAC8B,SAAV,GAAsB;AACpB5B,EAAAA,MAAM,EAAEP,SAAS,CAACoC,KAAV,GAAkBC,UADN;AAEpB/B,EAAAA,IAAI,EAAEN,SAAS,CAACsC,MAAV,CAAiBD;AAFH,CAAtB;AAKA,eAAehC,SAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFavorite, removeFavorite } from '../actions/recipes';\nimport FavIcon from '../images/whiteHeartIcon.svg';\nimport BlackFavIcon from '../images/blackHeartIcon.svg';\n\nfunction FavButton({ type, recipe }) {\n  const favorite = useSelector((state) => state.recipes.favorite);\n  const dispatch = useDispatch();\n  const formatedType = type === 'Meal' ? 'comida' : 'bebida';\n\n  const handleClick = () => {\n    const fav = favorite\n      .find(\n        (currRec) => recipe[`id${type}`] === currRec.id && currRec.type === formatedType,\n      );\n    const { [`id${type}`]: id, strArea: area = '', strCategory: category = '',\n      strAlcoholic: alcoholicOrNot = '', [`str${type}`]: name,\n      [`str${type}Thumb`]: image } = recipe;\n    const formatedRecipe = {\n      id, area, category, alcoholicOrNot, name, image, type: formatedType };\n    if (fav) {\n      dispatch(removeFavorite(formatedRecipe));\n    } else dispatch(addFavorite(formatedRecipe));\n  };\n\n  useEffect(() => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favorite));\n  }, [favorite]);\n\n  return (\n    <button type=\"button\" onClick={ handleClick }>\n      <img\n        data-testid=\"favorite-btn\"\n        src={ favorite\n          .some((rec) => recipe[`id${type}`] === rec.id && rec.type === formatedType)\n          ? BlackFavIcon : FavIcon }\n        alt=\"favorite\"\n      />\n    </button>\n  );\n}\n\nFavButton.propTypes = {\n  recipe: PropTypes.shape().isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default FavButton;\n"]},"metadata":{},"sourceType":"module"}