{"ast":null,"code":"var _jsxFileName = \"/home/alinedebastiani/sd-08-project-recipes-app/src/components/RecipeCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction RecipeCard({\n  type,\n  index,\n  recipe,\n  recommendation\n}) {\n  const pathname = type === 'Meal' ? 'comidas' : 'bebidas';\n  return /*#__PURE__*/React.createElement(Link, {\n    to: `/${pathname}/${recipe[`id${type}`]}`,\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-card-img`,\n    src: recipe[`str${type}Thumb`],\n    alt: recipe[`str${type}`],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), recommendation && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }\n  }, type === 'Meal' ? recipe.strCategory : recipe.strAlcoholic), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": recommendation ? `${index}-recomendation-title` : `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, recipe[`str${type}`]));\n}\n\nRecipeCard.defaultProps = {\n  recommendation: false\n};\nRecipeCard.propTypes = {\n  type: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  recipe: PropTypes.shape().isRequired,\n  recommendation: PropTypes.bool\n};\nexport default RecipeCard;","map":{"version":3,"sources":["/home/alinedebastiani/sd-08-project-recipes-app/src/components/RecipeCard.jsx"],"names":["React","PropTypes","Link","RecipeCard","type","index","recipe","recommendation","pathname","strCategory","strAlcoholic","defaultProps","propTypes","string","isRequired","number","shape","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA;AAAvB,CAApB,EAA6D;AAC3D,QAAMC,QAAQ,GAAGJ,IAAI,KAAK,MAAT,GAAkB,SAAlB,GAA8B,SAA/C;AACA,sBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAI,IAAGI,QAAS,IAAGF,MAAM,CAAE,KAAIF,IAAK,EAAX,CAAc,EAD3C;AAEE,mBAAe,GAAEC,KAAM,cAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,mBAAe,GAAEA,KAAM,WADzB;AAEE,IAAA,GAAG,EAAGC,MAAM,CAAE,MAAKF,IAAK,OAAZ,CAFd;AAGE,IAAA,GAAG,EAAGE,MAAM,CAAE,MAAKF,IAAK,EAAZ,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASIG,cAAc,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,IAAI,KAAK,MAAT,GAAkBE,MAAM,CAACG,WAAzB,GAAuCH,MAAM,CAACI,YAAnD,CAVT,eAWE;AACE,mBACEH,cAAc,GAAI,GAAEF,KAAM,sBAAZ,GAAqC,GAAEA,KAAM,YAF/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIC,MAAM,CAAE,MAAKF,IAAK,EAAZ,CALV,CAXF,CADF;AAqBD;;AAEDD,UAAU,CAACQ,YAAX,GAA0B;AACxBJ,EAAAA,cAAc,EAAE;AADQ,CAA1B;AAIAJ,UAAU,CAACS,SAAX,GAAuB;AACrBR,EAAAA,IAAI,EAAEH,SAAS,CAACY,MAAV,CAAiBC,UADF;AAErBT,EAAAA,KAAK,EAAEJ,SAAS,CAACc,MAAV,CAAiBD,UAFH;AAGrBR,EAAAA,MAAM,EAAEL,SAAS,CAACe,KAAV,GAAkBF,UAHL;AAIrBP,EAAAA,cAAc,EAAEN,SAAS,CAACgB;AAJL,CAAvB;AAOA,eAAed,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction RecipeCard({ type, index, recipe, recommendation }) {\n  const pathname = type === 'Meal' ? 'comidas' : 'bebidas';\n  return (\n    <Link\n      to={ `/${pathname}/${recipe[`id${type}`]}` }\n      data-testid={ `${index}-recipe-card` }\n    >\n      <img\n        data-testid={ `${index}-card-img` }\n        src={ recipe[`str${type}Thumb`] }\n        alt={ recipe[`str${type}`] }\n      />\n      { recommendation\n          && <p>{ type === 'Meal' ? recipe.strCategory : recipe.strAlcoholic }</p> }\n      <p\n        data-testid={\n          recommendation ? `${index}-recomendation-title` : `${index}-card-name`\n        }\n      >\n        { recipe[`str${type}`] }\n      </p>\n    </Link>\n  );\n}\n\nRecipeCard.defaultProps = {\n  recommendation: false,\n};\n\nRecipeCard.propTypes = {\n  type: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  recipe: PropTypes.shape().isRequired,\n  recommendation: PropTypes.bool,\n};\n\nexport default RecipeCard;\n"]},"metadata":{},"sourceType":"module"}